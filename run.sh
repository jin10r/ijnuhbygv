#!/bin/bash

# ===========================================
# –ü–†–û–°–¢–û–ô –ó–ê–ü–£–°–ö –°–û–¶–ò–ê–õ–¨–ù–û–ô –°–ï–¢–ò
# ===========================================

set -e

# –¶–≤–µ—Ç–∞
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

echo -e "${GREEN}============================================${NC}"
echo -e "${GREEN}–ó–ê–ü–£–°–ö –°–û–¶–ò–ê–õ–¨–ù–û–ô –°–ï–¢–ò${NC}"
echo -e "${GREEN}============================================${NC}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞
if [ ! -f .env ]; then
    echo -e "${RED}–û—à–∏–±–∫–∞: –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!${NC}"
    echo -e "${YELLOW}–°–∫–æ–ø–∏—Ä—É–π—Ç–µ .env.template –≤ .env –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è:${NC}"
    echo "cp .env.template .env"
    echo "nano .env"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ REACT_APP_BACKEND_URL
source .env
if [ -z "$REACT_APP_BACKEND_URL" ] || [ "$REACT_APP_BACKEND_URL" = "https://your-ngrok-url.ngrok-free.app" ]; then
    echo -e "${RED}–û—à–∏–±–∫–∞: REACT_APP_BACKEND_URL –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!${NC}"
    echo -e "${YELLOW}–ó–∞–ø—É—Å—Ç–∏—Ç–µ ngrok –∏ –æ–±–Ω–æ–≤–∏—Ç–µ .env —Ñ–∞–π–ª:${NC}"
    echo "1. ngrok http 80"
    echo "2. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ URL –∏–∑ ngrok"
    echo "3. –ó–∞–º–µ–Ω–∏—Ç–µ 'your-ngrok-url' –≤ .env —Ñ–∞–π–ª–µ"
    exit 1
fi

echo -e "${GREEN}‚úì –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–∞–π–¥–µ–Ω–∞${NC}"
echo -e "${GREEN}‚úì Backend URL: $REACT_APP_BACKEND_URL${NC}"

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo -e "${YELLOW}–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...${NC}"
docker-compose down 2>/dev/null || true

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
echo -e "${GREEN}–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤...${NC}"
docker-compose up --build -d

# –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ MongoDB
echo -e "${YELLOW}–û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ MongoDB...${NC}"
for i in {1..30}; do
  if docker-compose exec mongodb mongo --eval "db.stats()" >/dev/null 2>&1; then
    echo -e "${GREEN}‚úì MongoDB –≥–æ—Ç–æ–≤–∞${NC}"
    break
  fi
  echo -e "${YELLOW}–ü–æ–¥–æ–∂–¥–∏—Ç–µ... –ü–æ–ø—ã—Ç–∫–∞ $i/30${NC}"
  sleep 2
done

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
echo -e "${YELLOW}–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö (1000 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π + 1000 –æ–±—ä—è–≤–ª–µ–Ω–∏–π)...${NC}"
# –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ –∏ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ
docker-compose exec -T backend python generate_test_data.py --force || echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö${NC}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
echo -e "${GREEN}============================================${NC}"
echo -e "${GREEN}–°–¢–ê–¢–£–° –°–ï–†–í–ò–°–û–í${NC}"
echo -e "${GREEN}============================================${NC}"
docker-compose ps

echo -e "${GREEN}============================================${NC}"
echo -e "${GREEN}–ì–û–¢–û–í–û!${NC}"
echo -e "${GREEN}============================================${NC}"
echo -e "${GREEN}–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É:${NC}"
echo -e "${GREEN}üåê –õ–æ–∫–∞–ª—å–Ω–æ: http://localhost${NC}"
echo -e "${GREEN}üåê –ß–µ—Ä–µ–∑ ngrok: $REACT_APP_BACKEND_URL${NC}"
echo -e "${GREEN}üì± Telegram WebApp: $REACT_APP_BACKEND_URL/webapp${NC}"
echo -e "${GREEN}============================================${NC}"
